<?xml version="1.0" encoding="UTF-8"?>
<root __ideNodeOpen="true"><path path="output/warii" main="output/warii/mobile/index.html" __ideNodeOpen="true"><package name="components" type="" __ideNodeOpen="true"><component name="panel" transparent="" precode="" __ideNodeOpen="true">&lt;div id="@{$name}" class="panel" style="@{@$style}"&gt;@{node::content($_)}&lt;/div&gt;</component><component name="page" transparent="" precode="">&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;style&gt;
@font-face {
  font-family: 'fuente';
/*  src: url('SabrinaAT.otf');*/
  src: url('Playball.ttf');
/*  src: url('orangeJuice2.0.ttf');*/
/*  src: url('RemachineScript_Personal_Use.ttf');*/
/*  src: url('Lighthouse_PersonalUse.ttf');*/
}
html,body{
  margin:0px;
  padding:0px;
  overflow:hidden;
  width:100%;
  height:100%;
  font-family: 'fuente';
}
body{
  background-image:url("fondo.jpg");
  background-position:50% 0%;
  background-size:auto 100%;
/*  background-repeat:no-repeat;*/
}
.panel{
  display:none;
  border:2px solid black;
  border-radius:8px;
  margin:2%;
  padding:1%;
/*  width:94%;*/
  width:88%;
  height:88%;
  font-size:28px;
  background-color:rgba(55,155,155,0.4);
  position:relative;
  overflow:hidden;
}
button{
  font:inherit;
  border:2px solid black;
  border-radius:8px;
  padding:8px;
  background-color:rgba(55,155,155,0.8);
}
input{
  font:inherit;
  border:2px solid black;
  padding:8px;
  background-color:rgba(255,255,255,0.8);
}
.pregunta{}
.respuestas{
  display:inline-block;
  white-space:pre;
  width: 40%;
  height: 80%;
  position:absolute;
  left:10%;
}
.respuesta{
  cursor:pointer;
  background-color:rgba(55,55,255,0.3);
  margin:2px;
}
.respuesta span{
  background-color:rgba(255,255,255,0.8);
  border:1px solid black;
  width:2em;
  text-align:center;
  display:inline-block;
}
.imagen{
  display:inline-block;
  background-position:50% 0%;
  background-size:auto 100%;
  background-repeat:no-repeat;
  width: 40%;
  height: 80%;
  position:absolute;
  right:10%;
}
.bomb{
  background-image:url("bomb.png");
  background-position:0% 0%;
  background-size:auto 100%;
  background-repeat:no-repeat;
  width:3em;
  text-align:right;
  display:inline-block;
  background-color:rgba(55,255,255,0.3);
  border:1px solid black;
  border-radius:4px;
  padding:2px;
  margin:2px;
}
.clock{
  background-image:url("clock.png");
  background-position:0% 0%;
  background-size:auto 100%;
  background-repeat:no-repeat;
  width:3em;
  text-align:right;
  display:inline-block;
  background-color:rgba(55,255,255,0.3);
  border:1px solid black;
  border-radius:4px;
  padding:2px;
  margin:2px;
}
.glove{
  background-image:url("glove.png");
  background-position:0% 0%;
  background-size:auto 100%;
  background-repeat:no-repeat;
  width:3em;
  text-align:right;
  display:inline-block;
  background-color:rgba(55,255,255,0.3);
  border:1px solid black;
  border-radius:4px;
  padding:2px;
  margin:2px;
}
.points{
  background-image:url("points.png");
  background-position:0% 0%;
  background-size:auto 100%;
  background-repeat:no-repeat;
  width:5em;
  text-align:right;
  display:inline-block;
  background-color:rgba(55,255,255,0.3);
  border:1px solid black;
  border-radius:4px;
  padding:2px;
  margin:2px;
}
.usado{
  background-color:rgba(55,255,255,0.7);
}
&lt;/style&gt;
&lt;script src="jquery-1.9.1.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;
function showPanel(selector){
  $(".panel").fadeOut();
  document.body.style.backgroundImage="url(fondo1.jpg)";
  $(selector).fadeIn();
}
function shuffle(array) {
  var currentIndex = array.length
    , temporaryValue
    , randomIndex
    ;

  // While there remain elements to shuffle...
  while (0 !== currentIndex) {

    // Pick a remaining element...
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;

    // And swap it with the current element.
    temporaryValue = array[currentIndex];
    array[currentIndex] = array[randomIndex];
    array[randomIndex] = temporaryValue;
  }

  return array;
}
var puntaje=0,clock=0;
$(function(){
  if(typeof window.device=="undefined"){
    window.device={
      uuid:1
    };
  }
  if(typeof device!="undefined"){
    $.ajax({
      type:"get",
      data:{id:device.uuid},
      jsonp: "callback",
      dataType: 'jsonp',
      url:"http://localhost/achachi/output/trivia/setid.php",
      success:function(res){
        eval(res);
        showPanel("#start");
      }
    });
  }
})
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;@{node::content($_)}&lt;/body&gt;
&lt;/html&gt;</component><component name="abm" transparent="" precode="" __ideNodeOpen="true"><file name="@{$name}_list.php" preprocess="" __ideNodeOpen="true">&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;link rel="stylesheet" href="pure-min.css"&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;?php
global $@{$name};
//require_once("@{$name}.php");
require_once("uDB.php");
$@{$name}=new uDB('db/@{$name}');
//set_time_limit(1);
function printGrid( $array )
{
  print( '&lt;div&gt;&lt;a class="pure-button" type="button" href="@{$name}_form.php"&gt;Nuevo&lt;/a&gt;&lt;/div&gt;' );
  print( '&lt;table class="pure-table" border="1"&gt;&lt;thead&gt;' );
  //bug: 49369
//  reset( $array );
//  print( '&lt;tr&gt;&lt;th&gt;[]&lt;/th&gt;&lt;th&gt;' );
//  print( implode( '&lt;/th&gt;&lt;th&gt;', array_keys( current( $array ) ) ) );
//  print( '&lt;/th&gt;&lt;/tr&gt;' );
//  print( '&lt;/thead&gt;&lt;tbody&gt;' );
  foreach( $array as $row =&gt; $cells )
  {
    print( '&lt;tr&gt;&lt;th&gt;[]&lt;/th&gt;' );
    foreach($cells as $k=&gt;$c){
      print( '&lt;th&gt;'.$k.'&lt;/th&gt;' );
    }
    print( '&lt;/th&gt;&lt;/tr&gt;' );
    print( '&lt;/thead&gt;&lt;tbody&gt;' );
    break;
  }
  foreach( $array as $row =&gt; $cells )
  {
    $cellsH=array();
    foreach($cells as $ck=&gt;$c) if(is_array($c)) $cellsH[$ck]=implode('&lt;br /&gt;',$c); else $cellsH[$ck]=$c;
    print( "&lt;tr&gt;&lt;th&gt;$row&lt;/th&gt;&lt;td&gt;" );
    print( implode( '&lt;/td&gt;&lt;td&gt;', $cellsH ) );
    print( '&lt;/td&gt;&lt;td&gt;&lt;a class="pure-button" href="@{$name}_form.php?id='.$row.'"&gt;Editar&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;' );
  }
  print( '&lt;/tbody&gt;&lt;/table&gt;' );
}
function arrayResult( &amp;$result )
{
  $array=array();
  while( $row = $result-&gt;Read() )
  {
    $array[] = $row;
  }
  return $array;
}

printGrid( $@{$name} );</file><file name="@{$name}_form.php" preprocess="" __ideNodeOpen="true">&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;link rel="stylesheet" href="pure-min.css"&gt;
&lt;style&gt;
form{
  background-color:rgba(230,230,230,0.7);
  font-family:sans-serif;
}
form div{
  display:inline-block;
  width:100%;
}
form div label{
  display:inline-block;
  vertical-align:middle;
  width:30%;
}
form div span{
  display:inline-block;
  vertical-align:middle;
  width:65%;
}
form input {
  width:100%;
  font:inherit;
}
form textarea {
  width:100%;
  font:inherit;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;form class="pure-form pure-form-aligned" action="?id=&lt;?php echo @$_GET['id'] ?&gt;" method="post" enctype="multipart/form-data"&gt;
&lt;fieldset&gt;
&lt;?php
$struct=@{node::content($_)};
global $@{$name};
require_once("uDB.php");
//require_once("@{$name}.php");
require_once("uDB.php");
$@{$name}=new uDB('db/@{$name}');

if(isset($@{$name}[@$_GET['id']])){
  $rec=$@{$name}[$_GET['id']];
}
define('UPLOAD_BASE', 'img/');
if(count($_POST)){

  /** UPLOADS **/
  foreach($_FILES as $fieldName =&gt; $ff){
    if ($ff["error"] &gt; 0) {
      echo "Return Code: " . $ff["error"] . "&lt;br&gt;";
      unset($_POST[$fieldName]);
    } elseif(!empty($ff["name"])) {
      $fname=$ff["name"];
      $index=0;
      while(file_exists(UPLOAD_BASE . $fname)) {
        $index++;
        $fname=$index . $ff["name"];
      }
      move_uploaded_file($ff["tmp_name"],
        UPLOAD_BASE . $fname);
      $_POST[$fieldName]=UPLOAD_BASE . $fname;
    } else {
      unset($_POST[$fieldName]);
    }
  }
  if(!isset($rec)){
    if(empty($_GET['id'])){
      $_GET['id']=count($@{$name});
    }
    $@{$name}[$_GET['id']]=array();
    //$rec=&amp;$@{$name}[$_GET['id']];
  }
var_dump($_POST,$struct);
  foreach($_POST as $k=&gt;$v)if(!empty($v) || ($struct[$k]['type']!='file')){
    if($struct[$k]['type']=='array'){
      $v=str_replace("\r\n","\n",$v);
      $v=str_replace("\r","\n",$v);
      $v=explode("\n",$v);
    }
    $@{$name}[$_GET['id']][$k]=$v;
  }
  //uDB::save("@{$name}", $@{$name});
  header("Location: @{$name}_list.php");
  exit;
}
foreach($struct as $f=&gt;$s){
  switch($s["type"]){
    case "input":echo '&lt;div class="pure-control-group"&gt;&lt;label for="',$f,'"&gt;', $s['label'],':&lt;/label&gt;&lt;span&gt;&lt;input name="',$f,'" value="',@$rec[$f],'"&gt;&lt;/span&gt;&lt;/div&gt;';
      break;
    case "array":echo '&lt;div class="pure-control-group"&gt;&lt;label&gt;', $s['label'],':&lt;/label&gt;&lt;span&gt;&lt;textarea name="',$f,'"&gt;',@implode("\n", $rec[$f]),'&lt;/textarea&gt;&lt;/span&gt;&lt;/div&gt;';
      break;
    case "file":echo '&lt;div class="pure-control-group"&gt;&lt;label&gt;', $s['label'],':&lt;/label&gt;&lt;span&gt;&lt;input name="',$f,'" type="file"&gt;&lt;/span&gt;&lt;/div&gt;';
      echo '&lt;div class="pure-control-group"&gt;&lt;label&gt;&lt;/label&gt;&lt;span&gt;&lt;iframe src="',@$rec[$f],'" style="width:100%"&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/div&gt;';
      break;
  }
}
?&gt;
        &lt;div class="pure-controls"&gt;
            &lt;label for="cb" class="pure-checkbox"&gt;
            &lt;/label&gt;
            &lt;button type="submit" class="pure-button pure-button-primary"&gt;Enviar&lt;/button&gt;
            &lt;button type="button" class="pure-button" onclick="window.location.href='@{$name}_list.php'"&gt;Volver&lt;/button&gt;
        &lt;/div&gt;
&lt;/fieldset&gt;
&lt;/form&gt;</file></component></package><package name="app" type=""><file name="mobile/index.html" preprocess="" __ideNodeOpen="true"><page __ideNodeOpen="true"><panel __ideNodeOpen="true" name="start" style="display:block">&lt;center&gt;
&lt;h1&gt;Tu nombre:&lt;/h1&gt;&lt;br/&gt;
&lt;input id="name" value="anónimo"&gt;&lt;br/&gt;
&lt;script&gt;
function setName(){
  $.ajax({
    type:"get",
    data:{nombre:$("#name").val(),id:device.uuid},
    jsonp: "callback",
    dataType: 'jsonp',
    url:"http://localhost/achachi/output/trivia/setname.php",
    success:function(res){
      eval(res);
    }
  });
}
&lt;/script&gt;
&lt;button type="button" onclick="showPanel('#pregunta');setName();cargaPregunta();"&gt;Empezar&lt;/button&gt;
&lt;/center&gt;</panel><panel __ideNodeOpen="true" name="pregunta">&lt;script&gt;
function cargaPregunta(puntuar){
  if(typeof puntuar=="undefined")puntuar=0;
  var $pregunta=$("#pregunta .pregunta");
  var $respuestas=$("#pregunta .respuestas");
  var $imagen=$("#pregunta .imagen");
  $.ajax({
    type:"get",
    jsonp: "callback",
    dataType: 'jsonp',
    data:{id:device.uuid,puntuar:puntuar},
    url:"http://localhost/achachi/output/trivia/pregunta.php",
    success:function(res){
      eval(res);
      clock=30;
      $(".clock").html(clock);
      activaBomba=false;
      $(".bomb").removeClass('usado');
      $(".glove").removeClass('usado');
    }
  });
}
function responder(el){
  if($(el).find("a").html()==correcta){
    puntaje++;$(".points").html(puntaje);
    showPanel('#correcto');
    setTimeout(function(){
      showPanel('#pregunta');cargaPregunta(1);
    },2000);
  } else if(!activaHacha) {
    showPanel('#incorrecto');
    setTimeout(function(){
      showPanel('#pregunta');cargaPregunta();
    },2000);
  } else {
    $(el).fadeOut(800,function(){$(el).remove();});
  }
  activaHacha=false;
}
setInterval(function(){
  if(clock&gt;0){
    clock--;
    if(clock&lt;1){
      showPanel("#timpofuera");
      setTimeout(function(){
        showPanel('#pregunta');cargaPregunta();
      },2000);
    }
  } else clock=0;
  $(".clock").html(clock);
},1000);
function bomba(){
  if($(".bomb").hasClass('usado'))return;
  var valor=parseInt($(".bomb").html());
  if(valor&gt;0){
    activaBomba=true;
    var ok=false;
    $(".respuestas").children("div").each(function(index){
      if(!ok &amp;&amp; $(this).find("a").html()!=correcta){
        $(this).fadeOut(800,function(){$(this).remove()});
        ok=true;
      }
    });
    valor--;
    $(".bomb").html(valor);
    $(".bomb").addClass('usado');
  }
}
window.activaHacha=false;
function hacha(){
  if($(".glove").hasClass('usado'))return;
  var valor=parseInt($(".glove").html());
  if(valor&gt;0){
    window.activaHacha=true;
    valor--;
    $(".glove").html(valor);
    $(".glove").addClass('usado');
  }
}
&lt;/script&gt;
&lt;div&gt;&lt;span class="clock"&gt;30&lt;/span&gt;&lt;span class="bomb" onclick="bomba()"&gt;3&lt;/span&gt;&lt;span class="glove" onclick="hacha()"&gt;2&lt;/span&gt; - &lt;span class="points"&gt;0&lt;/span&gt;&lt;/div&gt;
&lt;div class="pregunta"&gt;&lt;/div&gt;
&lt;span class="respuestas"&gt;&lt;/span&gt;&lt;span class="imagen"&gt;&lt;/span&gt;</panel><panel __ideNodeOpen="true" name="correcto">¡CORRECTO! &lt;span class="points"&gt;0&lt;/span&gt;</panel><panel __ideNodeOpen="true" name="incorrecto">INCORRECTO.</panel><panel __ideNodeOpen="true" name="timpofuera">TIEMPO FUERA</panel></page></file></package><file name="pregunta.php" preprocess="" __ideNodeOpen="true">&lt;?php
global $preguntas;
global $usuarios;
require_once("uDB.php");
//require_once("preguntas.php");
//require_once("usuarios.php");
$preguntas=new uDB('db/preguntas');
$usuarios=new uDB('db/usuarios');
$p=rand(0,count($preguntas)-1);
$pregunta=$preguntas[$p]-&gt;getValue();
$url=dirname(curPageURL());
$pregunta['imagen'] = $url . "/" . $pregunta['imagen'];
$id=@$_REQUEST['id'];
if(@$_REQUEST['puntuar']=="1" &amp;&amp; isset($usuarios[$id])){
  if(!isset($usuarios[$id]['puntaje']))$usuarios[$id]['puntaje']=0;
//  $usuarios[$id]['puntaje']++;
  $usuarios[$id]['puntaje']=$usuarios[$id]['puntaje']+1;
  //uDB::save("usuarios", $usuarios);
}
function curPageURL() {
 $pageURL = 'http';
 if (@$_SERVER["HTTPS"] == "on") {$pageURL .= "s";}
 $pageURL .= "://";
 if ($_SERVER["SERVER_PORT"] != "80") {
  $pageURL .= $_SERVER["SERVER_NAME"].":".$_SERVER["SERVER_PORT"].$_SERVER["REQUEST_URI"];
 } else {
  $pageURL .= $_SERVER["SERVER_NAME"].$_SERVER["REQUEST_URI"];
 }
 return $pageURL;
}

ob_start();
?&gt;
var res=&lt;?php echo json_encode($pregunta); ?&gt;;
$pregunta.html(res.pregunta);
$respuestas.html("\n");
var ind=["A","B","C","D","E","F","G"];
window.correcta=res.respuestas[res.correcta];
window.data=res;
var sres=shuffle(res.respuestas);
for(var r in sres){
  $respuestas.append("&lt;div class='respuesta' onclick='responder(this);return false;'&gt;&lt;span&gt; "+ind[r]+" &lt;/span&gt;&lt;a&gt;"+res.respuestas[r]+"&lt;/a&gt;&lt;/div&gt;");
}
$imagen.css("background-image","url("+res.imagen+")");
&lt;?php
if(@$_REQUEST['puntuar']=="1" &amp;&amp; isset($usuarios[$id])){
  if(rand(0,5)==0){
    ?&gt;
    var valor=parseInt($(".bomb").html());
    valor++;
    $(".bomb").html(valor);
    &lt;?php
  }
  if(rand(0,5)==0){
    ?&gt;
    var valor=parseInt($(".glove").html());
    valor++;
    $(".glove").html(valor);
    &lt;?php
  }
}
?&gt;

&lt;?php
$code=ob_get_contents();
ob_end_clean();
echo $_REQUEST['callback'],'(',json_encode($code),');';</file><file name="preguntas.php" preprocess="" __ideNodeOpen="true">&lt;?php
$preguntas=array(
  array(
    "pregunta"=&gt;"¿Qué personajes representa Rubens en este cuadro?",
    "respuestas"=&gt;array("Betsabé y David","Sansón y Dalila","Raquel y Jacob","Abrahám y Sara"),
    "correcta"=&gt;1,
    "imagen"=&gt;"img/rubens.jpg",
  )
);</file><file name="setid.php" preprocess="" __ideNodeOpen="true">&lt;?php
global $usuarios;
require_once("uDB.php");
//require_once("usuarios.php");
$usuarios=new uDB('db/usuarios');
$id=$_REQUEST['id'];
if(isset($usuarios[$id])){
  ob_start();
  ?&gt;
    $("#name").val(&lt;?php echo json_encode($usuarios[$id]["nombre"]) ?&gt;);
    puntaje=&lt;?php echo json_encode(@$usuarios[$id]["puntaje"]*1) ?&gt;;
    $(".points").html(puntaje);
  &lt;?php
  $code=ob_get_contents();
  ob_end_clean();
  echo $_REQUEST['callback'],'(',json_encode($code),');';
} else {
  ob_start();
  ?&gt;
  &lt;?php
  $code=ob_get_contents();
  ob_end_clean();
  echo $_REQUEST['callback'],'(',json_encode($code),');';
}</file><file name="uDB.php" preprocess="" __ideNodeOpen="true">&lt;?php
//class UDB implements ArrayAccess, Iterator {
class UDB implements ArrayAccess, Iterator, Countable {
  private $pointer = 0;
  public $path='';
  public $isFile=false;

  public function __construct($path){
    $this-&gt;path = $path;
    $this-&gt;isFile = is_file($path);
  }
  public function offsetExists ( $offset ){
    $value = @$this-&gt;offsetGet ( $offset );
    return isset($value);
  }
  public function count(){
    if($this-&gt;isFile){
      $valueS = file_get_contents($this-&gt;path);
      $value = @unserialize($valueS);
      if($value===false &amp;&amp; $valueS!="b:0;"){
        //error
        return 0;
      }
      return count($value);
    } else {
      return count(glob($this-&gt;path.'/*'));
    }
  }
  public function getValue(){
    if($this-&gt;isFile){
      $valueS = file_get_contents($this-&gt;path);
      $value = @unserialize($valueS);
      if($value===false &amp;&amp; $valueS!="b:0;"){
        //error
        return null;
      }
      return $value;
    } else {
      die('TODO getValue of directory');
    }
  }
  public function offsetGet ( $offset ){
    if($this-&gt;isFile){
      $valueS = file_get_contents($this-&gt;path);
      $value = @unserialize($valueS);
      if($value===false &amp;&amp; $valueS!="b:0;"){
        //error
        return null;
      }
      if(is_object($value)){
        return @$value-&gt;$offset;
      } elseif(is_array($value)){
        return @$value[$offset];
      } else {
        return @$value[$offset];
      }
    } else {
      if(!isset($offset) || $offset===''){
        return null;
      } elseif(file_exists($this-&gt;path . '/' . $offset)){
        return new uDB($this-&gt;path . '/' . $offset);
      } else {
        return null;
      }
    }
  }
  public function offsetSet ( $offset , $newValue ){
    if($this-&gt;isFile){
      $valueS = file_get_contents($this-&gt;path);
      $value = @unserialize($valueS);
      if($value===false &amp;&amp; $valueS!="b:0;"){
        //error
        return;
      }
      if(is_object($value)){
        $value-&gt;$offset=$newValue;
      } elseif(is_array($value)){
        $value[$offset]=$newValue;
      } else {
        $value[$offset]=$newValue;
      }
      file_put_contents($this-&gt;path , serialize($value));
    } else {
      if(isset($offset)){
        file_put_contents($this-&gt;path . '/' . $offset , serialize($newValue));
      }
    }
  }
  public function offsetUnset ( $offset ){
    if($this-&gt;isFile){
      $valueS = file_get_contents($this-&gt;path);
      $value = @unserialize($valueS);
      if($value===false &amp;&amp; $valueS!="b:0;"){
        //error
        return;
      }
      if(is_object($value)){
        unsset($value-&gt;$offset);
      } elseif(is_array($value)){
        unset($value[$offset]);
      } else {
        unset($value[$offset]);
      }
      file_put_contents($this-&gt;path , serialize($value));
    } else {
      if(file_exists($this-&gt;path . '/' . $offset)){
        if(is_file($this-&gt;path . '/' . $offset)){
          unlink($this-&gt;path . '/' . $offset);
        } else {
          uDB::rrmdir($this-&gt;path . '/' . $offset);
        }
      }
    }
  }

  static function rrmdir($dir) {
    if (is_dir($dir)) {
      $objects = scandir($dir);
      foreach ($objects as $object) {
        if ($object != "." &amp;&amp; $object != "..") {
          if (filetype($dir."/".$object) == "dir") rrmdir($dir."/".$object); else unlink($dir."/".$object);
        }
      }
      reset($objects);
      rmdir($dir);
    }
  }

  public function loadKeys(){
    if($this-&gt;isFile){
      $valueS = file_get_contents($this-&gt;path);
      $value = @unserialize($valueS);
      if($value===false &amp;&amp; $valueS!="b:0;"){
        //error
        return;
      }
      if(is_object($value)){
        $this-&gt;keys = get_object_vars($value);
      } elseif(is_array($value)){
        $this-&gt;keys = array_keys($value);
      } else {
        $this-&gt;keys = array();
      }
    } else {
      $keys=array();
      foreach(glob($this-&gt;path.'/*') as $f) $keys[]=basename($f);
      $this-&gt;keys=$keys;
    }
//    echo __LINE__;var_dump($this-&gt;keys);die;
  }

  public function key() {
    $this-&gt;loadKeys();
    return @$this-&gt;keys[$this-&gt;pointer];
  }

  public function current() {
    $key = $this-&gt;key();
    $value=$this-&gt;offsetGet($key);
    return $value;
  }

  public function next() {
    $this-&gt;pointer++;
  }

  public function rewind() {
    $this-&gt;pointer = 0;
  }

  public function seek($position) {
    $this-&gt;pointer = $position;
  }

  public function valid() {
    $current=$this-&gt;current();
    return isset($current);
  }

  /*static function save($name, $data){
    file_put_contents($name.'.php', '&lt;?php'."\n\$$name=".var_export($data,true).';');
  }*/
}</file><file name="setname.php" preprocess="" __ideNodeOpen="true">&lt;?php
global $usuarios;
require_once("uDB.php");
//require_once("usuarios.php");
$usuarios=new uDB('db/usuarios');
$id=$_REQUEST['id'];
if(isset($usuarios[$id])){
  $usuarios[$id]["nombre"]=$_REQUEST['nombre'];
  //uDB::save("usuarios", $usuarios);
} else {
  $usuarios[$id]=array("nombre"=&gt;$_REQUEST['nombre']);
  //uDB::save("usuarios", $usuarios);
}</file><abm name="preguntas" __ideNodeOpen="true">array(
  "pregunta"=&gt;array("label"=&gt;"Pregunta","type"=&gt;"input"),
  "respuestas"=&gt;array("label"=&gt;"Respuestas","type"=&gt;"array"),
  "correcta"=&gt;array("label"=&gt;"Es correcta (0=primero, 1=segundo, ...)","type"=&gt;"input"),
  "imagen"=&gt;array("label"=&gt;"Imagen","type"=&gt;"file")
)</abm><file name="db/preguntas/0" preprocess="" __ideNodeOpen="true">a:4:{s:8:"pregunta";s:51:"¿Qué personajes representa Rubens en este cuadro?";s:10:"respuestas";a:4:{i:0;s:16:"Betsabé y David";i:1;s:16:"Sansón y Dalila";i:2;s:14:"Raquel y Jacob";i:3;s:15:"Abrahám y Sara";}s:8:"correcta";i:1;s:6:"imagen";s:14:"img/rubens.jpg";}</file></path></root>