<?xml version="1.0" encoding="UTF-8"?>
<root><include src="$library/jquery.xml"/><path path="output/book" main="output/book/index.html" __ideNodeOpen="true"><jqueryX target="./"/><package name="" type="" __ideNodeOpen="false"><php __ideNodeOpen="true">
/*
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::
::  GIFEncoder Version 2.0 by László Zsidi, http://gifs.hu
::
::  This class is a rewritten 'GifMerge.class.php' version.
::
::  Modification:
::   - Simplified and easy code,
::   - Ultra fast encoding,
::   - Built-in errors,
::   - Stable working
::
::
::  Updated at 2007. 02. 13. '00.05.AM'
::
::
::
::  Try on-line GIFBuilder Form demo based on GIFEncoder.
::
::  http://gifs.hu/phpclasses/demos/GifBuilder/
::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*/

Class GIFEncoder {
  var $GIF = "GIF89a";    /* GIF header 6 bytes  */
  var $VER = "GIFEncoder V2.05";  /* Encoder version    */

  var $BUF = Array ( );
  var $LOP =  0;
  var $DIS =  2;
  var $COL = -1;
  var $IMG = -1;

  var $ERR = Array (
    'ERR00'=&gt;"Does not supported function for only one image!",
    'ERR01'=&gt;"Source is not a GIF image!",
    'ERR02'=&gt;"Unintelligible flag ",
    'ERR03'=&gt;"Does not make animation from animated GIF source",
  );

  /*
  :::::::::::::::::::::::::::::::::::::::::::::::::::
  ::
  ::  GIFEncoder...
  ::
  */
  function GIFEncoder  (
              $GIF_src, $GIF_dly, $GIF_lop, $GIF_dis,
              $GIF_red, $GIF_grn, $GIF_blu, $GIF_mod
            ) {
    if ( ! is_array ( $GIF_src ) &amp;&amp; ! is_array ( $GIF_tim ) ) {
      printf  ( "%s: %s", $this-&gt;VER, $this-&gt;ERR [ 'ERR00' ] );
      exit  ( 0 );
    }
    $this-&gt;LOP = ( $GIF_lop &gt; -1 ) ? $GIF_lop : 0;
    $this-&gt;DIS = ( $GIF_dis &gt; -1 ) ? ( ( $GIF_dis &lt; 3 ) ? $GIF_dis : 3 ) : 2;
    $this-&gt;COL = ( $GIF_red &gt; -1 &amp;&amp; $GIF_grn &gt; -1 &amp;&amp; $GIF_blu &gt; -1 ) ?
            ( $GIF_red | ( $GIF_grn &lt;&lt; 8 ) | ( $GIF_blu &lt;&lt; 16 ) ) : -1;

    for ( $i = 0; $i &lt; count ( $GIF_src ); $i++ ) {
      if ( strToLower ( $GIF_mod ) == "url" ) {
        $this-&gt;BUF [ ] = fread ( fopen ( $GIF_src [ $i ], "rb" ), filesize ( $GIF_src [ $i ] ) );
      }
      else if ( strToLower ( $GIF_mod ) == "bin" ) {
        $this-&gt;BUF [ ] = $GIF_src [ $i ];
      }
      else {
        printf  ( "%s: %s ( %s )!", $this-&gt;VER, $this-&gt;ERR [ 'ERR02' ], $GIF_mod );
        exit  ( 0 );
      }
      if ( substr ( $this-&gt;BUF [ $i ], 0, 6 ) != "GIF87a" &amp;&amp; substr ( $this-&gt;BUF [ $i ], 0, 6 ) != "GIF89a" ) {
        printf  ( "%s: %d %s", $this-&gt;VER, $i, $this-&gt;ERR [ 'ERR01' ] );
        exit  ( 0 );
      }
      for ( $j = ( 13 + 3 * ( 2 &lt;&lt; ( ord ( $this-&gt;BUF [ $i ] { 10 } ) &amp; 0x07 ) ) ), $k = TRUE; $k; $j++ ) {
        switch ( $this-&gt;BUF [ $i ] { $j } ) {
          case "!":
            if ( ( substr ( $this-&gt;BUF [ $i ], ( $j + 3 ), 8 ) ) == "NETSCAPE" ) {
              printf  ( "%s: %s ( %s source )!", $this-&gt;VER, $this-&gt;ERR [ 'ERR03' ], ( $i + 1 ) );
              exit  ( 0 );
            }
            break;
          case ";":
            $k = FALSE;
            break;
        }
      }
    }
    GIFEncoder::GIFAddHeader ( );
    for ( $i = 0; $i &lt; count ( $this-&gt;BUF ); $i++ ) {
      GIFEncoder::GIFAddFrames ( $i, $GIF_dly [ $i ] );
    }
    GIFEncoder::GIFAddFooter ( );
  }
  /*
  :::::::::::::::::::::::::::::::::::::::::::::::::::
  ::
  ::  GIFAddHeader...
  ::
  */
  function GIFAddHeader ( ) {
    $cmap = 0;

    if ( ord ( $this-&gt;BUF [ 0 ] { 10 } ) &amp; 0x80 ) {
      $cmap = 3 * ( 2 &lt;&lt; ( ord ( $this-&gt;BUF [ 0 ] { 10 } ) &amp; 0x07 ) );

      $this-&gt;GIF .= substr ( $this-&gt;BUF [ 0 ], 6, 7    );
      $this-&gt;GIF .= substr ( $this-&gt;BUF [ 0 ], 13, $cmap  );
      $this-&gt;GIF .= "!\377\13NETSCAPE2.0\3\1" . GIFEncoder::GIFWord ( $this-&gt;LOP ) . "\0";
    }
  }
  /*
  :::::::::::::::::::::::::::::::::::::::::::::::::::
  ::
  ::  GIFAddFrames...
  ::
  */
  function GIFAddFrames ( $i, $d ) {

    $Locals_str = 13 + 3 * ( 2 &lt;&lt; ( ord ( $this-&gt;BUF [ $i ] { 10 } ) &amp; 0x07 ) );

    $Locals_end = strlen ( $this-&gt;BUF [ $i ] ) - $Locals_str - 1;
    $Locals_tmp = substr ( $this-&gt;BUF [ $i ], $Locals_str, $Locals_end );

    $Global_len = 2 &lt;&lt; ( ord ( $this-&gt;BUF [ 0  ] { 10 } ) &amp; 0x07 );
    $Locals_len = 2 &lt;&lt; ( ord ( $this-&gt;BUF [ $i ] { 10 } ) &amp; 0x07 );

    $Global_rgb = substr ( $this-&gt;BUF [ 0  ], 13,
              3 * ( 2 &lt;&lt; ( ord ( $this-&gt;BUF [ 0  ] { 10 } ) &amp; 0x07 ) ) );
    $Locals_rgb = substr ( $this-&gt;BUF [ $i ], 13,
              3 * ( 2 &lt;&lt; ( ord ( $this-&gt;BUF [ $i ] { 10 } ) &amp; 0x07 ) ) );

    $Locals_ext = "!\xF9\x04" . chr ( ( $this-&gt;DIS &lt;&lt; 2 ) + 0 ) .
            chr ( ( $d &gt;&gt; 0 ) &amp; 0xFF ) . chr ( ( $d &gt;&gt; 8 ) &amp; 0xFF ) . "\x0\x0";

    if ( $this-&gt;COL &gt; -1 &amp;&amp; ord ( $this-&gt;BUF [ $i ] { 10 } ) &amp; 0x80 ) {
      for ( $j = 0; $j &lt; ( 2 &lt;&lt; ( ord ( $this-&gt;BUF [ $i ] { 10 } ) &amp; 0x07 ) ); $j++ ) {
        if  (
            ord ( $Locals_rgb { 3 * $j + 0 } ) == ( ( $this-&gt;COL &gt;&gt; 16 ) &amp; 0xFF ) &amp;&amp;
            ord ( $Locals_rgb { 3 * $j + 1 } ) == ( ( $this-&gt;COL &gt;&gt;  8 ) &amp; 0xFF ) &amp;&amp;
            ord ( $Locals_rgb { 3 * $j + 2 } ) == ( ( $this-&gt;COL &gt;&gt;  0 ) &amp; 0xFF )
          ) {
          $Locals_ext = "!\xF9\x04" . chr ( ( $this-&gt;DIS &lt;&lt; 2 ) + 1 ) .
                  chr ( ( $d &gt;&gt; 0 ) &amp; 0xFF ) . chr ( ( $d &gt;&gt; 8 ) &amp; 0xFF ) . chr ( $j ) . "\x0";
          break;
        }
      }
    }
    switch ( $Locals_tmp { 0 } ) {
      case "!":
        $Locals_img = substr ( $Locals_tmp, 8, 10 );
        $Locals_tmp = substr ( $Locals_tmp, 18, strlen ( $Locals_tmp ) - 18 );
        break;
      case ",":
        $Locals_img = substr ( $Locals_tmp, 0, 10 );
        $Locals_tmp = substr ( $Locals_tmp, 10, strlen ( $Locals_tmp ) - 10 );
        break;
    }
    if ( ord ( $this-&gt;BUF [ $i ] { 10 } ) &amp; 0x80 &amp;&amp; $this-&gt;IMG &gt; -1 ) {
      if ( $Global_len == $Locals_len ) {
        if ( GIFEncoder::GIFBlockCompare ( $Global_rgb, $Locals_rgb, $Global_len ) ) {
          $this-&gt;GIF .= ( $Locals_ext . $Locals_img . $Locals_tmp );
        }
        else {
          $byte  = ord ( $Locals_img { 9 } );
          $byte |= 0x80;
          $byte &amp;= 0xF8;
          $byte |= ( ord ( $this-&gt;BUF [ 0 ] { 10 } ) &amp; 0x07 );
          $Locals_img { 9 } = chr ( $byte );
          $this-&gt;GIF .= ( $Locals_ext . $Locals_img . $Locals_rgb . $Locals_tmp );
        }
      }
      else {
        $byte  = ord ( $Locals_img { 9 } );
        $byte |= 0x80;
        $byte &amp;= 0xF8;
        $byte |= ( ord ( $this-&gt;BUF [ $i ] { 10 } ) &amp; 0x07 );
        $Locals_img { 9 } = chr ( $byte );
        $this-&gt;GIF .= ( $Locals_ext . $Locals_img . $Locals_rgb . $Locals_tmp );
      }
    }
    else {
      $this-&gt;GIF .= ( $Locals_ext . $Locals_img . $Locals_tmp );
    }
    $this-&gt;IMG  = 1;
  }
  /*
  :::::::::::::::::::::::::::::::::::::::::::::::::::
  ::
  ::  GIFAddFooter...
  ::
  */
  function GIFAddFooter ( ) {
    $this-&gt;GIF .= ";";
  }
  /*
  :::::::::::::::::::::::::::::::::::::::::::::::::::
  ::
  ::  GIFBlockCompare...
  ::
  */
  function GIFBlockCompare ( $GlobalBlock, $LocalBlock, $Len ) {

    for ( $i = 0; $i &lt; $Len; $i++ ) {
      if  (
          $GlobalBlock { 3 * $i + 0 } != $LocalBlock { 3 * $i + 0 } ||
          $GlobalBlock { 3 * $i + 1 } != $LocalBlock { 3 * $i + 1 } ||
          $GlobalBlock { 3 * $i + 2 } != $LocalBlock { 3 * $i + 2 }
        ) {
          return ( 0 );
      }
    }

    return ( 1 );
  }
  /*
  :::::::::::::::::::::::::::::::::::::::::::::::::::
  ::
  ::  GIFWord...
  ::
  */
  function GIFWord ( $int ) {

    return ( chr ( $int &amp; 0xFF ) . chr ( ( $int &gt;&gt; 8 ) &amp; 0xFF ) );
  }
  /*
  :::::::::::::::::::::::::::::::::::::::::::::::::::
  ::
  ::  GetAnimation...
  ::
  */
  function GetAnimation ( ) {
    return ( $this-&gt;GIF );
  }
}
</php><component name="hoja" transparent="" __ideNodeOpen="true">#{
/*****************/
$height = 394;
$lienzoH=600;

for($_i=0;$_i&lt;=15;$_i++):
  $_image = @imagecreate(300, $lienzoH);

  $h=300;
  $pi=atan(1)*4;
  $pi2=atan(1)*2;
  $aLuz=$pi2;
//  $aOut=$pi2*1.05;
  $aOut=$pi2*0.95;
  
  $x0=300-20*$_i;$r=sin($_i/16*$pi)*40;
  if($r&lt;0) $r=0;
  
  $blanco = imagecolorallocate($_image, 255, 255, 25);
  $negro = imagecolorallocate($_image, 0, 0, 0);
  $degrade = array();
  for($_j=0;$_j&lt;100;$_j++):
    $_co=127+ceil(128/100*$_j);
    $degrade[$_j]=imagecolorallocate($_image, $_co, $_co, $_co);
  endfor;
  imagecolortransparent($_image, $negro);
  
  imagefill($_image, 0, 0, $negro);
  
  $X0=($x0+$pi2*$r);
  $X1=$X0+$aOut*$r;
  print"xpos.push(".(ceil($x0+$r)).");\n";
  for($x=0;$x&lt;300;$x++):
    if($x&gt;=$X0):
      if($x&gt;=$X1):
        $angle = $aOut;
        $x3D=$x0+$r*cos($aOut)-sin($aOut)*($x-$X1);
        $y3D=$r+$r*sin($aOut)+cos($aOut)*($x-$X1);
      else:
        $angle = ($x-$X0)/$r;
        $x3D=$x0+$r*cos($angle);
        $y3D=$r+$r*sin($angle);
      endif;
      if($y3D&lt;0)$y3D=0;
      $z3D=$h/($h-$y3D);
      $_jco = round(cos($angle-$aLuz)*99);
      if($_jco&lt;0)$_jco=0;
//  print (($angle-$aLuz)/$pi*180)."\n";
      if($_jco&gt;=count($degrade))$_jco=count($degrade)-1;
      $_co = $degrade[$_jco];
      imageline($_image, $x3D, ($lienzoH-$height*$z3D)/2, $x3D, ($lienzoH+$height*$z3D)/2, $_co);
    endif;
  endfor;
  ob_start();imagegif($_image);$_img=ob_get_contents();ob_end_clean();
  imagegif($_image, "hoja".$_i.".gif");
  imagedestroy($_image);
  $frames[]=$_img;
  $framed[]=10;
endfor;
  
//imagepng($_image, "hoja.png");

/******************/


/*
    GIFEncoder constructor:
        =======================

    image_stream = new GIFEncoder  (
              URL or Binary data  'Sources'
              int          'Delay times'
              int          'Animation loops'
              int          'Disposal'
              int          'Transparent red, green, blue colors'
              int          'Source type'
            );
*/
$gif = new GIFEncoder  (
              $frames,
              $framed,
              1,
              2,
              0, 0, 0,
              "bin"
    );
/*
    Possibles outputs:
    ==================

        Output as GIF for browsers :
          - Header ( 'Content-type:image/gif' );
        Output as GIF for browsers with filename:
          - Header ( 'Content-disposition:Attachment;filename=myanimation.gif');
        Output as file to store into a specified file:
          - FWrite ( FOpen ( "myanimation.gif", "wb" ), $gif-&gt;GetAnimation ( ) );
*/
//Header ( 'Content-type:image/gif' );
//echo  $gif-&gt;GetAnimation ( );
FWrite ( FOpen ( "hoja.gif", "wb" ), $gif-&gt;GetAnimation ( ) );

return "";
}</component><component name="hoja" transparent="" __ideNodeOpen="true">#{
/*****************/
$hojaH=364;
$lienzoH=600-90;

for($_i=0;$_i&lt;=15;$_i++):
  $_image = @imagecreate(600, $lienzoH);

  $h=300;
  $pi=atan(1)*4;
  $pi2=atan(1)*2;
  $aLuz=$pi2;
//  $aOut=$pi2*1.05;
  $aOut=$pi2 * (1+0.1*cos($pi2*$_i*$_i/15/15));
  
  $x0=300-20*$_i;
//  $r=sin($_i/16*$pi)*40;
  $r=sin($_i/16*$pi)*40;
  if($r&lt;0) $r=0;
  
  $blanco = imagecolorallocate($_image, 255, 255, 255);
  $negro = imagecolorallocate($_image, 0, 0, 0);
  $degrade = array();
  for($_j=0;$_j&lt;100;$_j++):
    $_co=127+ceil(128/100*$_j);
    $degrade[$_j]=imagecolorallocate($_image, $_co, $_co, $_co);
  endfor;
  imagecolortransparent($_image, $negro);
  
  imagefill($_image, 0, 0, $negro);
  
  $X0=($x0+$pi2*$r);
  $X1=$X0+$aOut*$r;
  print"xpos.push(".(ceil($x0+$r)).");\n";
  for($x=0;$x&lt;300;$x++):
    if($x&gt;=$X0):
      if($x&gt;=$X1):
        $angle = $aOut;
        $x3D=$x0+$r*cos($aOut)-sin($aOut)*($x-$X1);
        $y3D=$r+$r*sin($aOut)+cos($aOut)*($x-$X1);
      else:
        $angle = ($x-$X0)/$r;
        $x3D=$x0+$r*cos($angle);
        $y3D=$r+$r*sin($angle);
      endif;
      if($y3D&lt;0)$y3D=0;
      $z3D=$h/($h-$y3D);
      $_jco = round(cos($angle-$aLuz)*99);
      if($_jco&lt;0)$_jco=0;
//  print (($angle-$aLuz)/$pi*180)."\n";
      if($_jco&gt;=count($degrade))$_jco=count($degrade)-1;
      $_co = $degrade[$_jco];
      $x3D+=300;
      imageline($_image, $x3D, ($lienzoH-$hojaH*$z3D)/2, $x3D, ($lienzoH+$hojaH*$z3D)/2, $_co);
    endif;
  endfor;
  ob_start();imagegif($_image);$_img=ob_get_contents();ob_end_clean();
  imagegif($_image, "hoja".$_i.".gif");
  imagedestroy($_image);
  $frames[]=$_img;
  $framed[]=10;
endfor;
  
//imagepng($_image, "hoja.png");

/******************/


/*
    GIFEncoder constructor:
        =======================

    image_stream = new GIFEncoder  (
              URL or Binary data  'Sources'
              int          'Delay times'
              int          'Animation loops'
              int          'Disposal'
              int          'Transparent red, green, blue colors'
              int          'Source type'
            );
*/
$gif = new GIFEncoder  (
              $frames,
              $framed,
              0,
              2,
              0, 0, 0,
              "bin"
    );
/*
    Possibles outputs:
    ==================

        Output as GIF for browsers :
          - Header ( 'Content-type:image/gif' );
        Output as GIF for browsers with filename:
          - Header ( 'Content-disposition:Attachment;filename=myanimation.gif');
        Output as file to store into a specified file:
          - FWrite ( FOpen ( "myanimation.gif", "wb" ), $gif-&gt;GetAnimation ( ) );
*/
//Header ( 'Content-type:image/gif' );
//echo  $gif-&gt;GetAnimation ( );
FWrite ( FOpen ( "hoja.gif", "wb" ), $gif-&gt;GetAnimation ( ) );

return "";
}</component></package><hoja height="" width="" start="" end="" A="1" B="0" name=""/><file name="index.html" preprocess="" __ideNodeOpen="true">&lt;html&gt;
&lt;head&gt;
&lt;SCRIPT language="JavaScript"&gt;
&lt;!--
for(var i=0,l=15;i&lt;=l;i++){
  pic1= new Image(100,25); 
  pic1.src="hoja"+i+".gif"; 
}
//--&gt;
&lt;/SCRIPT&gt;
&lt;/head&gt;
&lt;body style="background-color:lightgreen;"&gt;
&lt;div style="height:300px;position:relative;left:300px;background-color:red;"&gt;
&lt;img src="book.png" style="position:relative;top:52px;left:-358px;"/&gt;
&lt;div id="hoja1" style="display:none;position:absolute;top:73px;left:0px;width:300;height:200px;background-color:white;overflow:hidden;"&gt;&lt;div style="position:absolute;width:300px;"&gt;
&lt;h2&gt;Reminders Book 2011&lt;/h2&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id="hoja2" style="display:none;position:absolute;top:73px;left:299px;width:1;height:200px;background-color:white;overflow:hidden;"&gt;&lt;div style="position:absolute;width:300px;"&gt;
&lt;table border="0" width="100%" style="font-size:12px;"&gt;&lt;tr&gt;&lt;td&gt;Statup weekend&lt;/td&gt;&lt;td align="rigth" width="30%"&gt;Viernes 18 de noviembre de 2011&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;hr /&gt;
&lt;table border="0" width="100%" style="font-size:12px;"&gt;&lt;tr&gt;&lt;td&gt;Reunion Pos Statup weekend&lt;/td&gt;&lt;td align="rigth" width="30%"&gt;Jueves 24 de noviembre de 2011&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;hr /&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id="hoja3" style="display:none;position:absolute;top:73px;left:299px;width:1;height:200px;background-color:white;overflow:hidden;"&gt;&lt;div style="position:absolute;width:300px;"&gt;
&lt;table border="0" width="100%" style="font-size:12px;"&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td align="rigth" width="30%"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;hr /&gt;
&lt;table border="0" width="100%" style="font-size:12px;"&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td align="rigth" width="30%"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;hr /&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id="hoja4" style="display:none;position:absolute;top:73px;left:299px;width:1;height:200px;background-color:white;overflow:hidden;"&gt;&lt;div style="position:absolute;width:300px;"&gt;Este es el 4 contenido&lt;/div&gt;&lt;/div&gt;
&lt;div id="hoja5" style="display:none;position:absolute;top:73px;left:299px;width:1;height:200px;background-color:white;overflow:hidden;"&gt;&lt;div style="position:absolute;width:300px;"&gt;Este es el 5 contenido&lt;/div&gt;&lt;/div&gt;
&lt;div id="hoja6" style="display:none;position:absolute;top:73px;left:299px;width:1;height:200px;background-color:white;overflow:hidden;"&gt;&lt;div style="position:absolute;width:300px;"&gt;Este es el 6 contenido&lt;/div&gt;&lt;/div&gt;
&lt;img id="hoja" src="hola0.gif" style="display:none;position:absolute;top:0px;left:-300px;"/&gt;
&lt;div style="position:absolute;left:300px;top:64px;background-color:white;border:1px outset white;cursor:pointer;"&gt;2011&lt;/div&gt;
&lt;div style="position:absolute;left:300px;top:94px;background-color:white;border:1px outset white;cursor:pointer;"&gt;2012&lt;/div&gt;
&lt;div style="position:absolute;left:300px;top:124px;background-color:white;border:1px outset white;cursor:pointer;"&gt;2013&lt;/div&gt;
&lt;script&gt;
var hoja=document.getElementById("hoja");
var xpos=[];
xpos.push(300);
xpos.push(288);
xpos.push(276);
xpos.push(263);
xpos.push(249);
xpos.push(234);
xpos.push(217);
xpos.push(200);
xpos.push(180);
xpos.push(160);
xpos.push(137);
xpos.push(114);
xpos.push(89);
xpos.push(63);
xpos.push(36);
xpos.push(0);

var hojaActual=document.getElementById("hoja1");
var hojaSgte=hojaActual.nextSibling.nextSibling;
var hojaPrev=null;
hojaActual.style.display="block";

function flipFw(){
  if(!sgte(hojaActual)) return;
  var $i=0;
  var flipPageInt = setInterval(function(){
    if($i==15) {
      clearInterval(flipPageInt);
      hoja.style.display="none";
      hojaActual=sgte(hojaActual);
      hojaPrev=prev(hojaActual);
      hojaSgte=sgte(hojaActual);
      hojaActual.style.display="block";
      hojaSgte.style.display="none";
      hojaPrev.style.display="none";
      return;
    }
    $i=($i+2);
    if($i&gt;15) {$i=15;}
    window.hoja.src="hoja"+$i+".gif";
    hoja.style.display="block";
    if($i==0) {
      hoja2.style.display="none";
    } else {
      hojaActual.firstChild.style.right="";
      hojaActual.firstChild.style.left="0px";
      hojaSgte.firstChild.style.right="0px";
      hojaSgte.firstChild.style.left="";

      hojaSgte.style.display="block";
      hojaSgte.style.left=xpos[$i]+"px";
      hojaSgte.style.width=(300-xpos[$i])+"px";
    }
  },50);
}
function flipBw(){
  if(!prev(hojaActual)) return;
      hojaActual=prev(hojaActual);
      hojaPrev=prev(hojaActual);
      hojaSgte=sgte(hojaActual);
      hojaActual.style.width="300px";

  var $i=15;
  var flipPageInt = setInterval(function(){
    if($i==0) {
      clearInterval(flipPageInt);
      hoja.style.display="none";
      hojaActual.style.display="block";
      hojaSgte.style.display="none";
      hojaPrev.style.display="none";
      return;
    }
    $i=($i-2);
    if($i&lt;0) {$i=0;}
    window.hoja.src="hoja"+$i+".gif";
    hoja.style.display="block";
    if($i==0) {
      hoja2.style.display="none";
    } else {
      hojaActual.firstChild.style.right="";
      hojaActual.firstChild.style.left="0px";
      hojaSgte.firstChild.style.right="0px";
      hojaSgte.firstChild.style.left="";
      hojaActual.style.display="block";

      hojaSgte.style.display="block";
      hojaSgte.style.left=xpos[$i]+"px";
      hojaSgte.style.width=(300-xpos[$i])+"px";
    }
  },50);
}
function sgte(div){
  if(!div) return null;
  var elem = div.nextSibling.nodeName.toUpperCase()=="#TEXT" ? div.nextSibling.nextSibling : div.nextSibling;
  return (elem &amp;&amp; elem.nodeName.toUpperCase()=="DIV")?elem:null;
}
function prev(div){
  if(!div) return null;
  var elem = div.previousSibling.nodeName.toUpperCase()=="#TEXT" ? div.previousSibling.previousSibling: div.previousSibling;
  return (elem &amp;&amp; elem.nodeName.toUpperCase()=="DIV")?elem:null;
}
&lt;/script&gt;
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;button type="button" onclick="flipBw()"&gt;&amp;lt;&lt;/button&gt;
&lt;button type="button" onclick="flipFw()"&gt;&amp;gt;&lt;/button&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</file><file name="index.html" preprocess="" __ideNodeOpen="true">&lt;html&gt;
&lt;head&gt;
&lt;script type="text/javascript" src="jquery/js/jquery-1.5.1.min.js"&gt;&lt;/script&gt;
&lt;style&gt;
.contenido{
  padding-left:20px;
  padding-top:20px;
}
.h1{
  font-size: 40px;
  margin: 0px;
  display:inline-block;
}
.h2{
  font-size: 12px;
  display:inline-block;
}
hr{
  margin: 0px;
}
.tab{
  background-color:white;
  border-top:1px solid #888888;
  border-bottom:1px solid #888888;
  border-right:1px solid #888888;
  width:32px;
  overflow:hidden;
  cursor:pointer;
}
.control{
}
.rem{
  font-family: serif;
  font-size: 12px;
  color:black;
}
.rem_to{
  font-family: serif;
  font-size: 12px;
  color:blue;
  border-top:none;
  border-left:none;
  border-right:none;
  border-bottom:1px dashed black;
  width:200px;
}
.rem_subject{
  font-family: serif;
  font-size: 12px;
  color:black;
  font-weight: bold;
  border-top:none;
  border-left:none;
  border-right:none;
  border-bottom:1px dashed black;
  width:200px;
}
.rem_fieldLabel{
  display:inline-block;
  width:60px;
  text-align:right;
}
.rem_body{
  font-family: serif;
  font-size: 12px;
  color:black;
  width:228px;
  height:60px;
}
&lt;/style&gt;
&lt;SCRIPT language="JavaScript"&gt;
for(var i=0,l=15;i&lt;=l;i++){
  var pic1= new Image(100,25); 
  pic1.src="hoja"+i+".gif"; 
}
function a(DEST){
  var x0=100,y0=100;
  var Wt=355;  //tapa
  var Hf=510;
  var H0=394;
  var H1=364;
  var W0=690/2;
  var W1=600/2;
  var div=document.createElement("div");
  var xpos=[];
  xpos.push(300);
  xpos.push(288);
  xpos.push(276);
  xpos.push(263);
  xpos.push(249);
  xpos.push(234);
  xpos.push(217);
  xpos.push(200);
  xpos.push(180);
  xpos.push(160);
  xpos.push(137);
  xpos.push(114);
  xpos.push(89);
  xpos.push(63);
  xpos.push(36);
  xpos.push(0);
  div.style.position="absolute";
  div.style.left=x0+"px";
  div.style.top=y0+"px";
  var i=0;
  div.innerHTML=
    '&lt;map name="FPMap0"&gt;'
    +'&lt;area coords="'+(W0-128)+', '+(0)+', '+(W0)+', '+(H0)+'" shape="rect" href="javascript:atras()"&gt;'
    +'&lt;area coords="'+(W0+W1-56)+', '+(0)+', '+(W0+W1+4)+', '+(H0)+'" shape="rect" href="javascript:adelante()"&gt;'
    +'&lt;/map&gt;'
    +'&lt;img onclick="book.open();" style="position:absolute;left:'+(W0-Wt)+'px;top:'+((H1-H0)/2)+'px" src="images/tapa2011.jpg"/&gt;'
    +'&lt;img usemap="#FPMap0" style="position:absolute;left:-'+W0+'px;top:'+((H1-H0)/2)+'px" src="book.png"/&gt;'
    +'&lt;div style="position:absolute;display:none;overflow:hidden;left:'+(xpos[i])+'px;width:'+(W1-xpos[i])+'px;height:'+H1+'px"&gt;&lt;div class="contenido" style="position:absolute;width:'+(W1)+'px;height:'+H1+'px"&gt;&lt;/div&gt;&lt;/div&gt;'
    +'&lt;div style="position:absolute;overflow:hidden;left:0px;width:'+xpos[i]+'px;height:'+H1+'px"&gt;&lt;div class="contenido"  style="position:absolute;left:0px;width:'+(W1)+'px;height:'+H1+'px"&gt;&lt;/div&gt;&lt;/div&gt;'
    +'&lt;img style="position:absolute;display:none;left:-'+W1+'px;top:'+((H1-Hf)/2)+'px" src="hoja'+i+'.gif"/&gt;'
    +'&lt;img style="position:absolute;cursor:pointer;left:'+(W1-32)+'px;top:'+(H1-39)+'px" src="images/esq.png" seve="0" onmousemove="if(this.getAttribute(\'seve\')!=\'1\') {$(this).fadeTo(300, 1);this.setAttribute(\'seve\',1);}" onmouseout="$(this).fadeTo(0, 0.3);this.setAttribute(\'seve\',0);" onclick="adelante()"/&gt;'
    +'&lt;div class="control" style="position:absolute;display:none;left:'+(W0)+'px;width:200px;height:'+H0+'px"&gt;&lt;/div&gt;';
  DEST.appendChild(div);
  var tapa=div.childNodes[1];
  var fondo=div.childNodes[2];
  var hoja2=div.childNodes[3];
  var hoja1=div.childNodes[4];
  var flip=div.childNodes[5];
  var corner=div.childNodes[6];
  var control=div.childNodes[7];
  var inter;
  this.getInter=function(){return inter};
  this.hoja1=hoja1;
  this.hoja2=hoja2;
  var me=this;
  corner.style.display="none";
  $(corner).fadeTo(0, 0.3);
  this.close=function(){
    tapa.style.display="block";
    fondo.style.display="none";
    hoja2.style.display="none";
    hoja1.style.display="none";
    flip.style.display="none";
    corner.style.display="none";
    $(".tab").hide();
  }
  this.open=function(){
    this.normal();
    paginaActual=0;
    book.loadPage(hoja1,buffer.getPage(paginaActual));
    book.loadTabs();
    book.loadControl();
    $(".tab").show();
    $(".control").show();
  }
  this.normal=function(){
    tapa.style.display="none";
    fondo.style.display="block";
    hoja2.style.display="none";
    hoja1.style.display="block";
    hoja1.style.width=W1+"px";
    flip.style.display="none";
    corner.style.display="block";
  }
  this.loadPage=function(page,cont){
    if(typeof(cont)=="string") page.firstChild.innerHTML=cont;
    else {$(page.firstChild).empty();if(cont)page.firstChild.appendChild(cont)}
  }
  this.flipFw=function(cont){
    clearInterval(inter);
    hoja2.style.display="none";
    me.loadPage(hoja2,cont);
    var j=0;
    inter=setInterval(function(){
        if(j&gt;=15){
          clearInterval(inter);
          me.loadPage(hoja1,cont);
          me.normal();
          return;
        }
        j=j+2;
        if(j&gt;15)j=15;
        me.flipSet(j);
      },
    50);
  }
  this.flipBk=function(cont){
    clearInterval(inter);
    hoja2.style.display="block";
    hoja2.style.left="0px";
    hoja2.style.width=W1+"px";
    me.loadPage(hoja2,hoja1.firstChild.firstChild);
    hoja1.style.display="none";
    me.loadPage(hoja1,cont);
    var j=15;
    inter=setInterval(function(){
        if(j&lt;=0){
          clearInterval(inter);
//          me.loadPage(hoja1,cont);
          me.normal();
          return;
        }
        j=j-2;
        if(j&lt;0)j=0;
        me.flipSet(j);
      },
    50);
  }
  this.flipSet=function(i){
    if(i&gt;15) {hoja1.style.display="none";flip.style.display="none";return;}
    if(i==0) hoja2.style.display="none";
    corner.style.display="none";
    hoja2.style.display="block";
    hoja2.style.left=xpos[i]+'px';
    hoja2.firstChild.style.left=(-xpos[i])+'px';
    hoja2.style.width=(W1-xpos[i])+'px';
    hoja1.style.width=xpos[i]+'px';
    hoja1.style.display="block";
    flip.src="hoja"+i+".gif";
    flip.style.display="block";
  }
  this.tabs=[];
  this.addTab=function(i,cont,page){
    var tab=document.createElement("div");
    tab.style.position="absolute";
    tab.style.left=(W1+8)+"px";
    tab.style.top=(24*i+4)+"px";
    tab.innerHTML=cont;
    tab.className="tab";
    createIndex(tab,page);
    this.tabs[i]={"L":tab,"p":page};
    div.appendChild(tab);
  }
  this.loadTabs=function(){
    $.ajax({
      url:"tabs.php",
      type:"GET",
      dataType:'text',
      data:{"t":new Date().getTime()},
      success:function(r){
        eval(r);
      }
    });
  }
  this.loadControl=function(){
    $.ajax({
      url:"control.php",
      type:"GET",
      dataType:'text',
      data:{"t":new Date().getTime()},
      success:function(r){
        eval(r);
      }
    });
  }
  this.insert=function(html){
    var page=buffer.getPage(paginaActual);
    page.innerHTML+=html;
    return page;
  }
  this.close();
}
var buffer={
  buffer:[],
  loadPage:function(i){
    buffer.buffer[i]=document.createElement("div");
    $.ajax({
      url:"page.php",
      type:"GET",
      dataType:'text',
      data:{"i":i,"t":new Date().getTime()},
      success:function(r){
        eval(r);
      }
    });
  },
  getPage:function(i){
    if(!this.buffer[i]) this.loadPage(i);
    return this.buffer[i];
  }
}
function createIndex(tab,page){
  tab.onclick=function(){
    if(page&gt;paginaActual)adelante(page);
    if(page&lt;paginaActual)atras(page);
  }
}
var paginaActual=0;
function atras(page){
  if(typeof(page)!="undefined")paginaActual=page; 
  else {if(paginaActual&gt;0) paginaActual--; else {book.close();return;}}
  book.flipBk(buffer.getPage(paginaActual));
}
function adelante(page){
  if(typeof(page)!="undefined") paginaActual=page; 
  else paginaActual++;
  book.flipFw(buffer.getPage(paginaActual));
}
&lt;/SCRIPT&gt;
&lt;/head&gt;
&lt;body onload="window.book=new a(document.body);"&gt;
&lt;/body&gt;
&lt;/html&gt;</file><resource path="libroTapa.jpg" folder="images"/><resource path="tapa2011.jpg" folder="images"/><resource path="book.png" folder="./"/><resource path="esq.png" folder="images"/><resource path="mail.gif" folder="images"/><resource path="check.png" folder="images"/><file name="book.class.php" preprocess="" __ideNodeOpen="true">&lt;?php
class book{
  function getPage($i){
    $date=strtotime("2011-01-01 +".$i."day");
    $dia = Date("d",$date);
    $mes = Date("M",$date);
    $diaSemana = Date("l",$date);
    
    ob_start();
    ?&gt;
    &lt;span class="h1"&gt;&lt;?=$dia ?&gt;&lt;/span&gt;&lt;span class="h2"&gt;&lt;?=$mes ?&gt;&lt;br /&gt;&lt;?=$diaSemana ?&gt;&lt;/span&gt;
    &lt;hr /&gt;
    &lt;?php
    $cont=ob_get_contents();
    ob_end_clean();
    return 'buffer.buffer[i].innerHTML=' . json_encode($cont) . ';';
  }
  function getTabs(){
    $res=array();
    for($mes=1;$mes&lt;=12;$mes++){
      $date=strtotime("2011-".substr("0".$mes,-2,2)."-01");
      $page=Date("z",$date)+0;
      $mesL=Date("M",$date);
      $res[]=array("i"=&gt;($mes-1),"L"=&gt;$mesL,"p"=&gt;$page);
    }
    return $res;
  }
}
</file><file name="page.php" preprocess="" __ideNodeOpen="true">&lt;?php
require_once("book.class.php");

print book::getPage($_GET["i"]);
</file><file name="tabs.php" preprocess="" __ideNodeOpen="true">&lt;?php
require_once("book.class.php");

print "var tabs=" . json_encode(book::getTabs()). ";";

?&gt;
for(var i=0,l=tabs.length;i&lt;l;i++){
  book.addTab(tabs[i].i,tabs[i].L,tabs[i].p);
}
</file><file name="control.php" preprocess="" __ideNodeOpen="true">&lt;?php
ob_start();
?&gt;
&lt;button type="button" onclick="window.remindEmail()"&gt;&lt;img src="images/mail.gif"/&gt;&lt;/button&gt; Email - reminder
&lt;?php
$cont=ob_get_contents();
ob_end_clean();
?&gt;
window.remindEmail=function(){
  var page=book.insert('&lt;div class="rem"&gt;&lt;span class="rem_fieldLabel"&gt;To:&lt;/span&gt;&lt;input class="rem_to" name="to" value="to@email.com"/&gt;&lt;br /&gt;&lt;span class="rem_fieldLabel"&gt;Subject:&lt;/span&gt;&lt;input class="rem_subject" name="subject"/&gt;&lt;br /&gt;&lt;textarea class="rem_body" name="body"&gt;&lt;/textarea&gt;&lt;a class="button" href="#"&gt;&lt;img src="images/check.png"/&gt;&lt;/a&gt;&lt;/div&gt;');
  $(page).find("[name=to]").select();
}
$(".control").html(&lt;?php print json_encode($cont) ?&gt;);
</file></path></root>