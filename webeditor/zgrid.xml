<?xml version="1.0" encoding="UTF-8"?>
<root __ideNodeOpen="true"><include src="$library/zplugin.xml" __ideNodeOpen="false"/><component name="grid.html" transparent="" __ideNodeOpen="false"/><zplugin name="grid.html" nodesEditor="grid.html" __ideNodeOpen="true"><!--#editor.plugin

zplugin.create($this.parentNode);
componentsIndex[$this.parentNode.nodeName].editor=zcomponent.launch;

window.zgrid={};
zgrid["currentCell"]=null;
zgrid.createCell=function(){
  return ["div",{"class":"grid_1",onclick:function(){
    zgrid.editCell(this.firstChild);
  }},["div",{"class":"cell"},"\xA0"]];
}
zgrid.cellWidth=function(width,cell){
  if(!cell) cell=zgrid["currentCell"];
  if(cell)if(width>=1 && width<=12)cell.parentNode.className = cell.parentNode.className.replace(/grid_(\d+)/,"grid_"+width);
};
zgrid.getCellWidth=function(cell){
  var w=null;
  if(!cell) cell=zgrid["currentCell"];
  if(cell) w = parseInt(cell.parentNode.className.match(/grid_(\d+)/)[1]);
  return w;
};
zgrid.insertLeft=function(cell){
  if(!cell) cell=zgrid["currentCell"];
  if(cell) {
    draw3(cell.parentNode.parentNode,zgrid.createCell(),cell.parentNode);
  }
};
zgrid.insertRight=function(cell){
  if(!cell) cell=zgrid["currentCell"];
  if(cell) {
    draw3(cell.parentNode.parentNode,zgrid.createCell(),cell.parentNode.nextSibling);
  }
};
zgrid.remove=function(cell){
  if(!cell) cell=zgrid["currentCell"];
  if(cell) {
    if(cell.parentNode.nextSibling) zgrid["currentCell"]=cell.parentNode.nextSibling.firstChild;
    else if(cell.parentNode.previousSibling) zgrid["currentCell"]=cell.parentNode.previousSibling.firstChild;
    else return;
    cell.parentNode.parentNode.removeChild(cell.parentNode);
    zgrid["currentCell"].parentNode.onclick();
  }
};

--><zplugin.components __ideNodeOpen="true"><draw3.component name="grid.base">"div",{"class":"zgToolbar"},[
  "a",{href:"javascript:zgrid.cellWidth(zgrid.getCellWidth()-1)","class":"zgButton",onclick:""},["img",{src:"../library/zgrid/dec_width.gif"},[]],
  "a",{href:"javascript:zgrid.cellWidth(zgrid.getCellWidth()+1)","class":"zgButton",onclick:""},["img",{src:"../library/zgrid/inc_width.gif"},[]],
  "a",{href:"javascript:zgrid.insertLeft()","class":"zgButton",onclick:""},["img",{src:"../library/zgrid/ins_left.gif"},[]],
  "a",{href:"javascript:zgrid.insertRight()","class":"zgButton",onclick:""},["img",{src:"../library/zgrid/ins_right.gif"},[]],
  "a",{href:"javascript:zgrid.remove()","class":"zgButton"},["img",{src:"../library/zgrid/remove.gif"},[]],
  "a",{href:"javascript:zgrid.save()","class":"zgButton"},["img",{src:"../library/zgrid/remove.gif"},[]],
],
"div",{"class":"container_12 zgHeader"},[
  "div",{"class":"grid_1"},"1",
  "div",{"class":"grid_1"},"2",
  "div",{"class":"grid_1"},"3",
  "div",{"class":"grid_1"},"4",
  "div",{"class":"grid_1"},"5",
  "div",{"class":"grid_1"},"6",
  "div",{"class":"grid_1"},"7",
  "div",{"class":"grid_1"},"8",
  "div",{"class":"grid_1"},"9",
  "div",{"class":"grid_1"},"10",
  "div",{"class":"grid_1"},"11",
  "div",{"class":"grid_1"},"12"
],
"div",{id:"zgridContent"},[@{node::join(",",$_)}]</draw3.component><draw3.component name="draw3.style">"style",{},${node::join("",$_)}</draw3.component></zplugin.components><zplugin.base><grid.base/><draw3.style>.cell {
  border:1px dotted gray;
}
.cellPosition {
  position:absolute;
  
}

.container_12 {
  margin-left: auto;
  margin-right: auto;
  width: 960px;
}

/* `Grid &gt;&gt; Global
----------------------------------------------------------------------------------------------------*/

.grid_1,
.grid_2,
.grid_3,
.grid_4,
.grid_5,
.grid_6,
.grid_7,
.grid_8,
.grid_9,
.grid_10,
.grid_11,
.grid_12 {
  display: inline;
  float: left;
  margin-left: 10px;
  margin-right: 10px;
}

.push_1, .pull_1,
.push_2, .pull_2,
.push_3, .pull_3,
.push_4, .pull_4,
.push_5, .pull_5,
.push_6, .pull_6,
.push_7, .pull_7,
.push_8, .pull_8,
.push_9, .pull_9,
.push_10, .pull_10,
.push_11, .pull_11 {
  position: relative;
}

/* `Grid &gt;&gt; Children (Alpha ~ First, Omega ~ Last)
----------------------------------------------------------------------------------------------------*/

.alpha {
  margin-left: 0;
}

.omega {
  margin-right: 0;
}

/* `Grid &gt;&gt; 12 Columns
----------------------------------------------------------------------------------------------------*/

.container_12 .grid_1 {
  width: 60px;
}

.container_12 .grid_2 {
  width: 140px;
}

.container_12 .grid_3 {
  width: 220px;
}

.container_12 .grid_4 {
  width: 300px;
}

.container_12 .grid_5 {
  width: 380px;
}

.container_12 .grid_6 {
  width: 460px;
}

.container_12 .grid_7 {
  width: 540px;
}

.container_12 .grid_8 {
  width: 620px;
}

.container_12 .grid_9 {
  width: 700px;
}

.container_12 .grid_10 {
  width: 780px;
}

.container_12 .grid_11 {
  width: 860px;
}

.container_12 .grid_12 {
  width: 940px;
}

/* `Prefix Extra Space &gt;&gt; 12 Columns
----------------------------------------------------------------------------------------------------*/

.container_12 .prefix_1 {
  padding-left: 80px;
}

.container_12 .prefix_2 {
  padding-left: 160px;
}

.container_12 .prefix_3 {
  padding-left: 240px;
}

.container_12 .prefix_4 {
  padding-left: 320px;
}

.container_12 .prefix_5 {
  padding-left: 400px;
}

.container_12 .prefix_6 {
  padding-left: 480px;
}

.container_12 .prefix_7 {
  padding-left: 560px;
}

.container_12 .prefix_8 {
  padding-left: 640px;
}

.container_12 .prefix_9 {
  padding-left: 720px;
}

.container_12 .prefix_10 {
  padding-left: 800px;
}

.container_12 .prefix_11 {
  padding-left: 880px;
}

/* `Suffix Extra Space &gt;&gt; 12 Columns
----------------------------------------------------------------------------------------------------*/

.container_12 .suffix_1 {
  padding-right: 80px;
}

.container_12 .suffix_2 {
  padding-right: 160px;
}

.container_12 .suffix_3 {
  padding-right: 240px;
}

.container_12 .suffix_4 {
  padding-right: 320px;
}

.container_12 .suffix_5 {
  padding-right: 400px;
}

.container_12 .suffix_6 {
  padding-right: 480px;
}

.container_12 .suffix_7 {
  padding-right: 560px;
}

.container_12 .suffix_8 {
  padding-right: 640px;
}

.container_12 .suffix_9 {
  padding-right: 720px;
}

.container_12 .suffix_10 {
  padding-right: 800px;
}

.container_12 .suffix_11 {
  padding-right: 880px;
}

/* `Push Space &gt;&gt; 12 Columns
----------------------------------------------------------------------------------------------------*/

.container_12 .push_1 {
  left: 80px;
}

.container_12 .push_2 {
  left: 160px;
}

.container_12 .push_3 {
  left: 240px;
}

.container_12 .push_4 {
  left: 320px;
}

.container_12 .push_5 {
  left: 400px;
}

.container_12 .push_6 {
  left: 480px;
}

.container_12 .push_7 {
  left: 560px;
}

.container_12 .push_8 {
  left: 640px;
}

.container_12 .push_9 {
  left: 720px;
}

.container_12 .push_10 {
  left: 800px;
}

.container_12 .push_11 {
  left: 880px;
}

/* `Pull Space &gt;&gt; 12 Columns
----------------------------------------------------------------------------------------------------*/

.container_12 .pull_1 {
  left: -80px;
}

.container_12 .pull_2 {
  left: -160px;
}

.container_12 .pull_3 {
  left: -240px;
}

.container_12 .pull_4 {
  left: -320px;
}

.container_12 .pull_5 {
  left: -400px;
}

.container_12 .pull_6 {
  left: -480px;
}

.container_12 .pull_7 {
  left: -560px;
}

.container_12 .pull_8 {
  left: -640px;
}

.container_12 .pull_9 {
  left: -720px;
}

.container_12 .pull_10 {
  left: -800px;
}

.container_12 .pull_11 {
  left: -880px;
}

/* `Clear Floated Elements
----------------------------------------------------------------------------------------------------*/

/* http://sonspring.com/journal/clearing-floats */

.clear {
  clear: both;
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}

/* http://www.yuiblog.com/blog/2010/09/27/clearfix-reloaded-overflowhidden-demystified */

.clearfix:before,
.clearfix:after,
.container_12:before,
.container_12:after {
  content: '.';
  display: block;
  overflow: hidden;
  visibility: hidden;
  font-size: 0;
  line-height: 0;
  width: 0;
  height: 0;
}

.clearfix:after,
.container_12:after {
  clear: both;
}

/*
  The following zoom:1 rule is specifically for IE6 + IE7.
  Move to separate stylesheet if invalid CSS is a problem.
*/

.clearfix,
.container_12 {
  zoom: 1;
}</draw3.style><draw3.style>.zgToolbar{
  background-color:menu;
  border:1px solid menu;
}
.zgButton{
  border:1px solid black;
  display:inline-block;
}
.zgButton:hover{
  border:1px outset black;
}
.zgHeader{
  background-color:menu;
  text-align:center;
  border-top:1px solid white;
  border-bottom:1px solid black;
}
.zgHeader div{
  font-size:12px;
}
</draw3.style></zplugin.base><zplugin.launch>/**
 * This function requires canvas variable. It must be inside zplugin.launch 
 */
zgrid.editCell = function(cell){
  zgrid["currentCell"]=cell;
  var cells = canvas.getElementsByClassName("cell");
  for(var i=0,l=cells.length;i&lt;l;i++){
    cells[i].contentEditable=false;
  }
  cell.contentEditable=true;
  cell.onkeydown=function(event){
    event=window.event?window.event:event;
    var key=event.keyCode?event.keyCode:event.which;
//console.debug(key,event.ctrlKey,event.altKey);
    if(key==9){
      if(event.shiftKey){
        if(this.parentNode.previousSibling) {
          zgrid.editCell(this.parentNode.previousSibling.firstChild);
        } else {
        }
      } else {
        if(this.parentNode.nextSibling) {
          zgrid.editCell(this.parentNode.nextSibling.firstChild);
        } else {
          draw3(this.parentNode.parentNode,zgrid.createCell())
          zgrid.editCell(this.parentNode.nextSibling.firstChild);
        }
      }
      return false;
    } else if(key==39 &amp;&amp; event.ctrlKey &amp;&amp; event.altKey){
      var w = parseInt(this.parentNode.className.match(/grid_(\d+)/)[1]);
      if(w&lt;12)this.parentNode.className = this.parentNode.className.replace(/grid_(\d+)/,"grid_"+(w+1));
      return false;
    } else if(key==37 &amp;&amp; event.ctrlKey &amp;&amp; event.altKey){
      var w = parseInt(this.parentNode.className.match(/grid_(\d+)/)[1]);
      if(w&gt;1)this.parentNode.className = this.parentNode.className.replace(/grid_(\d+)/,"grid_"+(w-1));
      return false;
    }
  }
  cell.focus();
}
/*
zgrid.addContainer=function(){
  var b=document.getElementById("zgridContent");
  var c=node.ownerDocument.createElement("grid.html.container");
  draw3(b,["div",{"class","container_12"},[]]);
  zgrid.addGrid(b.lastChild);
  zgrid.currentContainer=c;
  zgrid.currentContainerDom=b.lastChild;
}

zgrid.addGrid=function(){
  draw3(zgrid.currentContainer;Dom, zgrid.createCell());
  var c=node.ownerDocument.createElement("grid.html.grid");
  zgrid.currentContainer.appendChild(c);
}
*/

zgrid.save=function(){
  var container=document.getElementById("zgridContent");
  Z.emptyNode(node);
  node.appendChild(node.ownerDocument.createTextNode(container.innerHTML));
  ztree.redrawNode(node);
}


setTimeout(function(){
  var container=document.getElementById("zgridContent");
  Z.emptyNode(container);
//console.debug(zdraw3.draw3(node));
  var html=zdraw3.draw3(node);
console.debug(html);
  html=html.substr(1,html.length-2);
//  draw3(container,html);
  container.innerHTML=html;
  var cells = canvas.getElementsByClassName("cell");
  if(cells &amp;&amp; cells[0]){
    zgrid.editCell(cells[0]);
  } else {
    var rows = container.getElementsByClassName("container_12");
    if(rows &amp;&amp; rows[0]){
      draw3(rows[0], zgrid.createCell());
    } else {
      draw3(container,["div",{"class":"container_12"},[]]);
      rows = container.getElementsByClassName("container_12");
      draw3(rows[0], zgrid.createCell());
    }
    cells = canvas.getElementsByClassName("cell");
    zgrid.editCell(cells[0]);
  }
/*  var row = container.getElementsByClassName("container_12");
  var cell;
  if(row &amp;&amp; row[0]){
    if(!(cell=row.getElementsByClassName("grid_1")))
    if(!(cell=row.getElementsByClassName("grid_2")))
    if(!(cell=row.getElementsByClassName("grid_3")))
    if(!(cell=row.getElementsByClassName("grid_4")))
    if(!(cell=row.getElementsByClassName("grid_5")))
    if(!(cell=row.getElementsByClassName("grid_6")))
    if(!(cell=row.getElementsByClassName("grid_7")))
    if(!(cell=row.getElementsByClassName("grid_8")))
    if(!(cell=row.getElementsByClassName("grid_9")))
    if(!(cell=row.getElementsByClassName("grid_10")))
    if(!(cell=row.getElementsByClassName("grid_11")))
    if(!(cell=row.getElementsByClassName("grid_12"))){}

  }
*/

},0);

</zplugin.launch></zplugin><component name="test" transparent="" __ideNodeOpen="true">Hola Mundo!!</component><grid.html __ideNodeOpen="true">&lt;div class="container_12"&gt;&lt;div class="grid_1"&gt;&lt;div class="cell" contenteditable="false"&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="grid_1"&gt;&lt;div class="cell" contenteditable="false"&gt;&amp;nbsp;jj&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</grid.html></root>