<?xml version="1.0" encoding="UTF-8"?>
<root __ideNodeOpen="true"><include src="$library/zplugin.xml"/><definitions><file name="webeditor/googleimage.php" preprocess="" __ideNodeOpen="true">&lt;?php
if(isset($_GET["action"])){
  $base = dirname($_GET["file"]);
  $path = $_GET["path"];
  chdir($path);
  if($_GET["action"]=="delete"){
    unlink($_GET["file"]);
    print "window.location.reload(true);";
  }
  if($_GET["action"]=="rename"){
    chdir(dirname($_GET["file"]));
    rename(basename($_GET["file"]), $_GET["name"]);
    print "window.location.reload(true);";
  }
  die;
}
if(isset($_GET["img"])){
  header( "Content-type: " . mime_content_type($_GET["img"]));
  readfile($_GET["img"]);
  die;
}
$base = dirname($_GET["file"]);
$path = $_GET["path"];
if(!(substr($path,0,1)=="/" || substr($path,1,1)==":")) $path=$base."/".$path;
if(!file_exists($path)) mkdir($path, 0777, true);
if(isset($_GET["download"])){
  chdir($path);
  $name = basename($_GET["url"]);
  file_put_contents($name, req($_GET["url"]));
  print "window.location.reload(true);";
  die;
}
?&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="jquery/js/jquery-1.5.1.min.js"&gt;&lt;/script&gt;
&lt;style&gt;
img{
  border:3px double black;
  margin:1;
}
img:hover{
  border:3px solid black;
  margin:1;
}
tr:hover{
  background-color:lightyellow;
}
td:{
  background-color:transparent;
}
.selected{
  background-color:lightblue;
}
&lt;/style&gt;
&lt;script&gt;
var name;
function selectImg(img){
  $.ajax({
    url:"googleimage.php",
    type:"GET",
    dataType:'text',
    data:{
      "url":img.src,
      "download":"true",
      "file":window.parent.file,
      "path":window.parent.currentNode.getAttribute('path'),
      "folder":window.parent.currentNode.getAttribute('folder'),
      "t":(new Date().getTime())
    },
    success:function(e){
      eval(e);
    }
  });
}
function delimg(file){
  $.ajax({
    url:"googleimage.php",
    type:"GET",
    dataType:'text',
    data:{
      "action":"delete",
      "file":file,
      "path":window.parent.currentNode.getAttribute('path'),
      "folder":window.parent.currentNode.getAttribute('folder'),
      "t":(new Date().getTime())
    },
    success:function(e){
      eval(e);
    }
  });
}
function chgname(file,name){
  $.ajax({
    url:"googleimage.php",
    type:"GET",
    dataType:'text',
    data:{
      "action":"rename",
      "file":file,
      "name":name,
      "path":window.parent.currentNode.getAttribute('path'),
      "folder":window.parent.currentNode.getAttribute('folder'),
      "t":(new Date().getTime())
    },
    success:function(e){
      eval(e);
    }
  });
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;?php
global $online;
$online=array();
function checkProxy($url, $port){
  global $online;
  if(isset($online[$url])) return $online[$url];
  $resURL = curl_init(); 
  curl_setopt($resURL, CURLOPT_URL, $url); 
  curl_setopt($resURL, CURLOPT_BINARYTRANSFER, 1); 
  curl_setopt($resURL, CURLOPT_HEADERFUNCTION, 'curlHeaderCallback'); 
  curl_setopt($resURL, CURLOPT_FAILONERROR, 1); 
  curl_setopt($ch, CURLOPT_PROXYPORT, $port);
  curl_exec ($resURL); 
  $intReturnCode = curl_getinfo($resURL, CURLINFO_HTTP_CODE); 
  curl_close ($resURL); 
  if ($intReturnCode != 200 &amp;&amp; $intReturnCode != 302 &amp;&amp; $intReturnCode != 304) { 
      return $online[$url]=false;
  }
  else return $online[$url]=true;
}
function req($url) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_VERBOSE, 0);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_USERAGENT, "Mozilla/4.0 (compatible;)");
    curl_setopt($ch, CURLOPT_URL, $url);
/*    if(checkProxy("http://192.168.72.36",8080)) {
      curl_setopt($ch, CURLOPT_PROXY, "http://192.168.72.36");
      curl_setopt($ch, CURLOPT_PROXYPORT, 8080);
    }*/
    $response = curl_exec($ch);
    return $response;
}

function domreq($url){
    $response = req($url);
    $dom = new DomDocument();
    $dom-&gt;loadHTML($response);
    return $dom;
}

function searchImage($q,$w,$h,$start=0){
  
//  $q=urlencode("imagesize:{$w}x{$h} $q");
//  $url="http://www.google.com/search?q=".$q."&amp;tbm=isch&amp;start=$start";  //&amp;hl=es&amp;cr=&amp;safe=images&amp;tbs=isz:ex,iszw:32,iszh:32
  $q=urlencode("$q");
  $url="http://www.google.com/search?tbm=isch&amp;start=20&amp;q=".$q."&amp;tbs=isz:ex,iszw:".$w.",iszh:".$h;
  $doc = domreq($url);
  $imgs = $doc-&gt;getElementsByTagName("img");
  foreach($imgs as $img) if(substr($img-&gt;getAttribute("src"),0,5)=="http:"){
    print("&lt;span style='display:inline-block'&gt;");
    print '&lt;img title="'.$img-&gt;getAttribute("src").'" src="'.$img-&gt;getAttribute("src").'" width="'.$w.'" height="'.$h.'" onclick="selectImg(this)"/&gt;&lt;br /&gt;';
    $u = $img-&gt;parentNode-&gt;getAttribute("href");
    parse_str($u,$p);
    print '&lt;img title="'.htmlentities($p["/imgres?imgurl"]).'" src="'.htmlentities($p["/imgres?imgurl"]).'" width="'.$w.'" height="'.$h.'" onclick="selectImg(this)"/&gt;';
    print("&lt;/span&gt;");
  }
}

$name = isset($_GET["name"])?$_GET["name"]:"";
$img = isset($_GET["img"])?$_GET["img"]:"";
$size = isset($_GET["size"])?$_GET["size"]:"16x16";
?&gt;
&lt;div style="overflow:auto;height:70%;"&gt;
&lt;?php
foreach(glob($path."/*") as $f){
?&gt;
&lt;span style="display:inline-block;text-align:center;position:relative;"&gt;
&lt;button style="position:absolute;right:0px;color:red;" onclick="delimg(&lt;?php print htmlentities(json_encode($f), ENT_QUOTES,'utf-8'); ?&gt;)"&gt;x&lt;/button&gt;
&lt;img src="?img=&lt;?php print htmlentities(urlencode(realpath($f))); ?&gt;" style="max-width:64px" /&gt;&lt;br/&gt;
&lt;input value="&lt;?php print htmlentities( basename($f), ENT_QUOTES, 'utf-8' ); ?&gt;" onchange="chgname(&lt;?php print htmlentities(json_encode($f), ENT_QUOTES,'utf-8'); ?&gt;, this.value)" /&gt;
&lt;/span&gt;
&lt;?php
}
?&gt;
&lt;/div&gt;
&lt;form method="GET"&gt;
  Search: &lt;input id="q" name="q" value="&lt;?=@htmlentities($_GET["q"]) ?&gt;"/&gt;Size:&lt;input name="size" value="&lt;?=@htmlentities($size) ?&gt;" /&gt;&lt;br /&gt;
  &lt;input id="name" name="name" type="hidden"/&gt;
  &lt;input id="file" name="file" type="hidden" value="&lt;?php print $_GET['file']; ?&gt;"/&gt;
  &lt;input id="path" name="path" type="hidden" value="&lt;?php print $_GET['path']; ?&gt;"/&gt;
  &lt;button type="submit"&gt;Buscar&lt;/button&gt;
&lt;/form&gt;
&lt;?php
if(isset($_GET["q"])){
  if($name){
    ?&gt;
    &lt;script&gt;var value=$("#q")[0].value;$("#&lt;?=str_replace(".",'\\\\.',$name)?&gt;")[0].onclick();$("#q")[0].value=value;&lt;/script&gt;
    &lt;?php
  }
  $size=explode("x",$size);
  searchImage( $_GET["q"], $size[0], $size[1] ,0);
  searchImage( $_GET["q"], $size[0], $size[1] ,20);
}
?&gt;
&lt;/body&gt;
&lt;/html&gt;</file><component name="images" transparent="" __ideNodeOpen="false">#{
//var_dump($path, $folder);
  $path=str_replace("\\", "/", $path);
  $folder=str_replace("\\", "/", $folder);
  if(substr($path,-1,1)=="/")$path=substr($path,0,-1);
  if(substr($folder,-1,1)=="/")$folder=substr($folder,0,-1);

  $_sourceBase = PROJECT_PATH;
  if(!(substr($path,0,1)=="/" || substr($path,1,1)==":")) $path=$_sourceBase."/".$path;
  if(!file_exists($path)) mkdir($path, 0777, true);

  $_destBase=getcwd();
  if(!(substr($folder,0,1)=="/" || substr($folder,1,1)==":")) $folder=$_destBase."/".$folder;
  if(!file_exists($folder)) mkdir($folder, 0777, true);

//var_dump($path, $folder);
  foreach(glob($path."/*") as $_f):
    $_d=$folder."/".basename($_f);
    copy($_f,$_d);
  endforeach;

}</component><zplugin name="images" nodesEditor="images" __ideNodeOpen="true"><!--#editor.plugin

zplugin.create($this.parentNode);
componentsIndex[$this.parentNode.nodeName].editor=zcomponent.launch;

--><zplugin.components __ideNodeOpen="true"/><zplugin.base __ideNodeOpen="true">"iframe",{src:"/achachi/webeditor/googleimage.php",style:"border:none;width:100%;height:100%"},[]</zplugin.base><zplugin.launch>
canvas.firstChild.src="/achachi/webeditor/googleimage.php?file="+file+"&amp;path="+currentNode.getAttribute("path");</zplugin.launch></zplugin></definitions></root>